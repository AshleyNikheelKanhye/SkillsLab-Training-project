
@{
    ViewBag.Title = "Profile";
    Layout = "~/Views/Shared/_Layout.cshtml";
    DataLibrary.Entities.User currentUser = Session["CurrentUser"] as DataLibrary.Entities.User;
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>


<h2>Profile</h2>
Here is your profile @currentUser.FirstName
<br />
<br />


FETCH FROM DATABASE TO GET THE Profile Details
<script>
    $(document).ready(function () {
        $('nav .nav-container a').removeClass('active');
        $('#profile').addClass('active');

/*        $('button#testbtn').click(function () {
            var testTrainingID = 1;
            var trainingObj = { trainingID: testTrainingID };
            var URL = "/Enrollment/TestingEmailService"
            var serverCall = new ServerCall(({ url: URL, parameters: trainingObj, callMethod: "POST" }));
            serverCall.fetchApiCall().then((response) => {
                console.log(response);
                if (response.result == "ok") {
                    toastr.success("email was sent asynchronously check logger for any errors");
                }
                else {
                    toastr.error("an error occured");
                }
            });
        });
        $('button#testHangfire').click(function () {

            var URL = "/Enrollment/TestingHanfireService"
            var serverCall = new ServerCall(({ url: URL, callMethod: "POST" }));
            serverCall.fetchApiCall().then((response) => {
                console.log(response);
                if (response.result == "ok") {
                    toastr.success("email was sent asynchronously check logger for any errors");
                }
                else {
                    toastr.error("an error occured");
                }
            });
        });*/



        $("#downloadBtn").click(function () {
            // Make an AJAX call to fetch JSON data
            
            var URL = "/Training/getUpcomings";
            
            var serverCall = new ServerCall({ url: URL,callMethod: "GET" });
            serverCall.fetchApiCall().then((response) => {
                // Convert JSON to CSV
                const csvData = convertJSONToCSV(response);

                // Create a Blob object containing the CSV data
                const blob = new Blob([csvData], { type: "text/csv" });

                // Create a download link
                const link = document.createElement("a");
                link.href = window.URL.createObjectURL(blob);
                link.download = "data.csv";

                // Append the link to the document
                document.body.appendChild(link);

                // Trigger the click event on the link
                link.click();

                // Remove the link from the document
                document.body.removeChild(link);


            });




        });

        function convertJSONToCSV(jsonData) {
            if (!Array.isArray(jsonData) || jsonData.length === 0) {
                console.error("JSON data is not an array or is empty.");
                return '';
            }

            const csvRows = [];
            const headers = Object.keys(jsonData[0]);

            if (headers.length === 0) {
                console.error("JSON data does not contain any objects with properties.");
                return '';
            }

            // Add headers to CSV
            csvRows.push(headers.join(','));

            // Add data rows to CSV
            jsonData.forEach((item) => {
                if (typeof item !== 'object' || item === null) {
                    console.error("Invalid data found. Each element in the JSON array should be an object.");
                    return;
                }

                const values = headers.map(header => {
                    // Convert null values to empty strings
                    return (item[header] === null) ? '' : item[header];
                });
                csvRows.push(values.join(','));
            });

            // Join rows with newline character
            return csvRows.join('\n');
        }




    });
</script>
@*<button id="testbtn">Click me to test if my manager get an application mail</button>
<button id="testHangfire">click me to test hangfire to test if lordnk7@gmail.com gets an email</button>

<br />
this will trigger an async email.
*@
<br />
<br />
<br />
<button id="downloadBtn">Download CSV for dummy training id</button>

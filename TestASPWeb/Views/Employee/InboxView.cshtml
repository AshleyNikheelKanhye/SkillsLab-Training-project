
@{
    ViewBag.Title = "InboxView";
    Layout = "~/Views/Shared/_Layout.cshtml";
    DataLibrary.Entities.User currentUser = Session["CurrentUser"] as DataLibrary.Entities.User;
}

<h2>InboxView</h2>

<style>

    .collapsible {
        background-color: #777;
        color: white;
        cursor: pointer;
        padding: 18px;
        width: 100%;
        border: none;
        text-align: left;
        outline: none;
        font-size: 15px;
    }

        .active, .collapsible:hover {
            background-color: #555;
        }

    .content {
        padding: 0 18px;
        max-height: 0;
        overflow: hidden;
        transition: max-height 0.2s ease-out;
        background-color: #f1f1f1;
    }
</style>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>

<script>
    $(document).ready(function () {

        //setup function for collapsible
        $(document).on("click", ".collapsible", function () {
            $(this).toggleClass("active");
            var content = $(this).next(".content");

            if (content.css("max-height") !== "0px") {
                content.css("max-height", "0");
            } else {
                content.css("max-height", content[0].scrollHeight + "px");
            }
        });

        //Get notifications from inbox database
        function GetUserNotifications() {
            var collapsibleBody = $("#collapsibleSet");
            var URL = "/Employee/GetUserNotifications";
            var userIDObj = { userID: @currentUser.UserID };
            var serverCall = new ServerCall({ url: URL, parameters: userIDObj, callMethod: "POST" });
            serverCall.fetchApiCall().then((response) => {
                if (response) {
                    if (response.length === 0) {
                        collapsibleBody.html("Inbox is empty");
                    } else {
                        $.each(response, function (index, notification) {
                            var notifElement = `
                                <button class="collapsible">${notification.Title}-----${formatDateTime(notification.MessageDate)}</button>
                                <div class="content">
                                    <p>${notification.MessageBody}</p>
                                </div>`;
                            collapsibleBody.append(notifElement);
                        });
                    }
                } else {
                    toastr.error("could not load notifications");
                }
            });


        }


        function formatDateTime(date) {
            if (date) {
                var parsedDate = new Date(parseInt(date.substr(6)));
                return parsedDate.toLocaleDateString() + ' ' + parsedDate.toLocaleTimeString();
            } else {
                return 'No date';
            }
        }
        //flow
        GetUserNotifications();

    });

</script>


<h2>INBOX</h2>





<div id="collapsibleSet">
   
</div>
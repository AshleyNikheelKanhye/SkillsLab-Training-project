
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    DataLibrary.Entities.User currentUser = Session["CurrentUser"] as DataLibrary.Entities.User;
}


<style>
    body {
        font-family: Arial, sans-serif;
        background-image: url("../../../Images/background.jpg");
        background-repeat: no-repeat;
        background-attachment: fixed;
        background-size: 100% 100%;
        margin: 0;
        padding: 0;
    }

    .collapsible {
        background-color: #777;
        color: white;
        cursor: pointer;
        padding: 18px;
        width: 100%;
        border: none;
        outline: none;
        margin-bottom: 2px;
        font-size: 20px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        width: 100%;
    }

        .active, .collapsible:hover {
            background-color: #555;
        }

    .content {
        padding: 0 18px;
        max-height: 0;
        overflow: hidden;
        transition: max-height 0.2s ease-out;
        background-color: #f1f1f1;
        font-size:20px;
    }

    #usernameHeader{
        padding:10px;
    }
    .title {
        margin-right: auto; /* Pushes the title to the left */
    }

    .datetime {
        margin-left: auto; /* Pushes the date to the right */
    }
</style>

<script>
    $(document).ready(function () {
        $('nav .nav-container a').removeClass('active');
        $('#inbox').addClass('active');

        //setup function for collapsible
        $(document).on("click", ".collapsible", function () {
            $(this).toggleClass("active");
            var content = $(this).next(".content");

            if (content.css("max-height") !== "0px") {
                content.css("max-height", "0");
            } else {
                content.css("max-height", content[0].scrollHeight + "px");
            }
        });

        //Get notifications from inbox database
        function GetUserNotifications() {
            var collapsibleBody = $("#collapsibleSet");
            var URL = "/User/GetUserNotifications";

            var serverCall = new ServerCall({ url: URL, callMethod: "POST" });
            serverCall.fetchApiCall().then((response) => {
                if (response) {
                    if (response.length === 0) {
                        collapsibleBody.html("Inbox is empty");
                    } else {
                        $.each(response, function (index, notification) {
                            var notifElement = `
                                <button class="collapsible"><p class="title">${notification.Title}</p> <p class="datetime">${formatDateTime(notification.MessageDate)}</p></button>
                                <div class="content">
                                    <p>${notification.MessageBody}</p>
                                </div>`;
                            collapsibleBody.append(notifElement);
                        });
                    }
                } else {
                    toastr.error("could not load notifications");
                }
            });
        }


        function formatDateTime(date) {
            if (date) {
                var parsedDate = new Date(parseInt(date.substr(6)));
                return parsedDate.toLocaleDateString() + ' ' + parsedDate.toLocaleTimeString();
            } else {
                return 'No date';
            }
        }
        //flow
        GetUserNotifications();

    });

</script>

<div id="usernameHeader">
    <h2>@currentUser.FirstName's INBOX</h2>
</div>



<div id="collapsibleSet">

</div>